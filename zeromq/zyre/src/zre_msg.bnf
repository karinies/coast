The following ABNF grammar defines the work with ZRE messages:

    ZRE             = N:greeting *traffic
    greeting        = N:hello
    traffic         = N:whisper / N:shout / N:join / N:leave
                    / N:ping P:ping-ok

    ;     Greet a peer so it can connect back to us
    hello           = signature %d1 sequence ipaddress mailbox groups status headers
    signature       = %xAA %xA1             ; two octets
    sequence        = number-2              ; Incremental sequence number
    ipaddress       = string                ; Sender IP address
    mailbox         = number-2              ; Sender mailbox port numer
    groups          = strings               ; List of groups sender is in
    status          = number-1              ; Sender groups status sequence
    headers         = dictionary            ; Sender header properties

    ;     Send a multi-part message to a peer
    whisper         = signature %d2 sequence content
    sequence        = number-2              ; Incremental sequence number
    content         = msg                   ; Wrapped message content

    ;     Send a multi-part message to a group
    shout           = signature %d3 sequence group content
    sequence        = number-2              ; Incremental sequence number
    group           = string                ; Group to send to
    content         = msg                   ; Wrapped message content

    ;     Join a group
    join            = signature %d4 sequence group status
    sequence        = number-2              ; Incremental sequence number
    group           = string                ; Name of group
    status          = number-1              ; Sender groups status sequence

    ;     Leave a group
    leave           = signature %d5 sequence group status
    sequence        = number-2              ; Incremental sequence number
    group           = string                ; Name of group
    status          = number-1              ; Sender groups status sequence

    ;     Ping a peer that has gone silent
    ping            = signature %d6 sequence
    sequence        = number-2              ; Incremental sequence number

    ;     Reply to a peer's ping
    ping_ok         = signature %d7 sequence
    sequence        = number-2              ; Incremental sequence number

    ; A list of string values
    strings         = strings-count *strings-value
    strings-count   = number-4
    strings-value   = longstr

    ; A list of name/value pairs
    dictionary      = dict-count *( dict-name dict-value )
    dict-count      = number-4
    dict-value      = longstr
    dict-name       = string

    ; A msg is zero or more distinct frames
    msg             = *frame

    ; Strings are always length + text contents
    string          = number-1 *VCHAR
    longstr         = number-4 *VCHAR

    ; Numbers are unsigned integers in network byte order
    number-1        = 1OCTET
    number-2        = 2OCTET
    number-4        = 4OCTET
